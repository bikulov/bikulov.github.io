<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c on Bikulov&#39;s blog</title>
    <link>https://bikulov.org/tags/c/</link>
    <description>Recent content in c on Bikulov&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <copyright>Network Notes 2022</copyright>
    <lastBuildDate>Sat, 26 Oct 2013 00:03:00 +0300</lastBuildDate><atom:link href="https://bikulov.org/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Command line arguments in C and C&#43;&#43; with gengetopt</title>
      <link>https://bikulov.org/blog/2013/10/26/command-line-arguments-in-c-and-c-with-gengetopt/</link>
      <pubDate>Sat, 26 Oct 2013 00:03:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/10/26/command-line-arguments-in-c-and-c-with-gengetopt/</guid>
      <description>Gengetopt is a tool for parsing command line arguments in C and C++ applications. It generates cmdline.c and cmdline.h files in pure C, which contain parser, helper functions, error handling and structure to store argument values. Arguments to be included in auto-generated file are defined in config. I usually gengetopt config file as cmdline.ggo. In this note I provide an example of gengetopt config file and arguments usage in code.</description>
    </item>
    
  </channel>
</rss>

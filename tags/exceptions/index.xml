<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>exceptions on Bikulov&#39;s blog</title>
    <link>https://bikulov.org/tags/exceptions/</link>
    <description>Recent content in exceptions on Bikulov&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <copyright>Network Notes 2022</copyright>
    <lastBuildDate>Sat, 23 Nov 2013 17:42:00 +0300</lastBuildDate><atom:link href="https://bikulov.org/tags/exceptions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>throw() in function signature in C&#43;&#43;</title>
      <link>https://bikulov.org/blog/2013/11/23/throw-in-function-signature-in-c-/</link>
      <pubDate>Sat, 23 Nov 2013 17:42:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/11/23/throw-in-function-signature-in-c-/</guid>
      <description>There is base class exception in standard library (header &amp;lt;exception&amp;gt;). It has default constructor, copy constructor, copy operator and destructor and virtual what() function. Latter returns string with additional information about exception.
#include &amp;lt;exception&amp;gt;class MyException: public std::exception {  virtual const char* what() const throw()  {  return &amp;#34;My Exception happened&amp;#34;;  } } The most confusing part in the above code is throw(). It assures no exception will be thrown from the what() function.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kenarius Octonotes</title>
    <link>https://bikulov.org/</link>
    <description>Recent content on Kenarius Octonotes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Feb 2021 09:30:00 +0300</lastBuildDate><atom:link href="https://bikulov.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to setup own selfhosted wiki</title>
      <link>https://bikulov.org/blog/2021/02/02/how-to-setup-own-selfhosted-wiki/</link>
      <pubDate>Tue, 02 Feb 2021 09:30:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2021/02/02/how-to-setup-own-selfhosted-wiki/</guid>
      <description>Disclaimer: many links in this post are referral. If you are uncomfortable with it, just search for the text in the links and use results from the search engines.
Plan  Spin up a new virtual server (1 CPU + 1 GB RAM is fairly enough) in Vultr, Digital Ocean, etc. Register a new domain name Install Docker and Docker Compose Use docker-compose to deploy a wiki Backups  Virtual server For example, let it be Digital Ocean.</description>
    </item>
    
    <item>
      <title>WireGuard on Ubuntu (server) and Android (client)</title>
      <link>https://bikulov.org/blog/2019/12/22/wireguard-on-ubuntu-server-and-android-client/</link>
      <pubDate>Sun, 22 Dec 2019 02:30:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2019/12/22/wireguard-on-ubuntu-server-and-android-client/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard&lt;/a&gt; is lightweight VPN with extremely simple configuration. All below was tested on Ubuntu 18.04 as server and Anroid 8.0.0 as client.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python program template</title>
      <link>https://bikulov.org/blog/2019/02/22/python-program-template/</link>
      <pubDate>Fri, 22 Feb 2019 00:30:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2019/02/22/python-program-template/</guid>
      <description>&lt;p&gt;For every simple python script you need same simple parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;command line arguments parsing&lt;/li&gt;
&lt;li&gt;logging&lt;/li&gt;
&lt;li&gt;[optional] submodules&lt;/li&gt;
&lt;li&gt;[optional] building to a binary&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;ve prepared a simple python project with all these parts to use as template. It is available on &lt;a href=&#34;https://github.com/bikulov/python_template/&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>https://bikulov.org/resume/</link>
      <pubDate>Mon, 18 Feb 2019 15:41:22 +0300</pubDate>
      
      <guid>https://bikulov.org/resume/</guid>
      <description>Employment  2015, October – current programmer in Yandex. 2016, January – current physisist in Lomonosov Moscow State University, Physics Faculty. 2013, December – 2015, October junior programmer in Yandex. 2013, May – 2015, January research fellow in Lomonosov Moscow State University, Physics Faculty. 2012, October – 2013, November analyst in IntroVision LLC. 2011 – 2012 programmer in IntroVision LLC. 2007 – 2012 undergraduate education in Lomonosov Moscow State University. 2011, summer research trainee in Clarkson University, Potsdam, NY, USA.</description>
    </item>
    
    <item>
      <title>Python sorting objects of user defined class</title>
      <link>https://bikulov.org/blog/2017/03/11/python-sorting-objects-of-user-defined-class/</link>
      <pubDate>Sat, 11 Mar 2017 23:32:41 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2017/03/11/python-sorting-objects-of-user-defined-class/</guid>
      <description>&lt;p&gt;The most common way of sorting collections of custom objects in Python is to &lt;a href=&#34;https://docs.python.org/3.5/library/functions.html#sorted&#34;&gt;provide&lt;/a&gt; key function that is used to extract a comparison key from each element:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#007020&#34;&gt;sorted&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;Case insensitive Sorting is here&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;split(), key&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;lower)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Tips for LXC 2: unprivileged containers</title>
      <link>https://bikulov.org/blog/2016/08/19/tips-for-lxc-2-unprivileged-containers/</link>
      <pubDate>Fri, 19 Aug 2016 18:26:36 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2016/08/19/tips-for-lxc-2-unprivileged-containers/</guid>
      <description>&lt;p&gt;LXC containers are great for application isolation and safe deployment. &lt;a href=&#34;http://unix.stackexchange.com/questions/181341/what-are-benefits-and-downsides-of-unprivileged-containers&#34;&gt;Running unprivileged containers is the safest way to run containers in a production environment&lt;/a&gt;. This note contains enough information to create your own safe container.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Script for user configurations generation and sending at Ubuntu OpenVPN server</title>
      <link>https://bikulov.org/blog/2016/01/05/script-for-user-configurations-generation-and-sending-at-ubuntu-openvpn-server/</link>
      <pubDate>Tue, 05 Jan 2016 23:07:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2016/01/05/script-for-user-configurations-generation-and-sending-at-ubuntu-openvpn-server/</guid>
      <description>&lt;p&gt;Ubuntu has a very detailed documentation about &lt;a href=&#34;https://help.ubuntu.com/lts/serverguide/openvpn.html&#34;&gt;OpenVPN server&lt;/a&gt; configuration. The key feature of this note is script for automatic generation of single-file client configurations (keys and certs are embedded) and sending them by email. Looks interesting? Read below!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Install Jupyter Notebook and Scientific Environment in Ubuntu 14.04 With Python 3</title>
      <link>https://bikulov.org/blog/2015/11/07/install-jupyter-notebook-and-scientific-environment-in-ubuntu-14.04-with-python-3/</link>
      <pubDate>Sat, 07 Nov 2015 11:24:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2015/11/07/install-jupyter-notebook-and-scientific-environment-in-ubuntu-14.04-with-python-3/</guid>
      <description>&lt;p&gt;Several changes occured since my last &lt;a href=&#34;https://bikulov.org/blog/2014/05/14/install-up-to-date-scientific-environment-in-ubuntu-14-dot-04-with-python-3-dot-4/&#34;&gt;note&lt;/a&gt; about installing python scientific environment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ipython.org/notebook&#34;&gt;IPython Notebook&lt;/a&gt; was succeeded by &lt;a href=&#34;http://jupyter.org/&#34;&gt;Jupyter Notebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stanford.edu/~mwaskom/software/seaborn/&#34;&gt;seaborn&lt;/a&gt; package is used for the pretty matplotlib plots&lt;/li&gt;
&lt;li&gt;raw &lt;a href=&#34;https://virtualenv.readthedocs.org/en/latest/&#34;&gt;virtualenv&lt;/a&gt; was replaced by &lt;a href=&#34;https://virtualenvwrapper.readthedocs.org/en/latest/&#34;&gt;virtualenvwrapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;procedure of notebook profiles creation and edition has been changed&lt;/li&gt;
&lt;li&gt;ipython &lt;a href=&#34;https://bugs.launchpad.net/ubuntu/+source/python3.4/+bug/1290847&#34;&gt;bug&lt;/a&gt; about pip in virtualenv is obsolete. But now another &lt;a href=&#34;https://github.com/matplotlib/matplotlib/issues/3029/&#34;&gt;workaround&lt;/a&gt; is needed for packahes installation&lt;/li&gt;
&lt;li&gt;pip installation from &lt;a href=&#34;https://bootstrap.pypa.io/get-pip.py&#34;&gt;pypa&lt;/a&gt; is now one-liner&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Scan images from command line in Linux</title>
      <link>https://bikulov.org/blog/2015/09/26/scan-images-from-command-line-in-linux/</link>
      <pubDate>Sat, 26 Sep 2015 20:05:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2015/09/26/scan-images-from-command-line-in-linux/</guid>
      <description>&lt;p&gt;Console utilities in Linuxes are cool: &lt;a href=&#34;https://mcabber.com/&#34;&gt;mcabber&lt;/a&gt; for jabber, &lt;a href=&#34;http://www.mutt.org/&#34;&gt;mutt&lt;/a&gt; for mail, &lt;a href=&#34;http://moc.daper.net/&#34;&gt;mocp&lt;/a&gt; for music, &lt;a href=&#34;http://www.vim.org/&#34;&gt;vim&lt;/a&gt; to rule them all! This note is about scaning from the console (I assume your scanner is already set-up). Aim is to scan document with good quality into pdf with reasonable size.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Animations from scientific data using Paraview 4.3 and python</title>
      <link>https://bikulov.org/blog/2015/04/05/animations-from-scientific-data-using-paraview-4.3-and-python/</link>
      <pubDate>Sun, 05 Apr 2015 16:31:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2015/04/05/animations-from-scientific-data-using-paraview-4.3-and-python/</guid>
      <description>&lt;h3 id=&#34;create-frames&#34;&gt;Create frames&lt;/h3&gt;
&lt;p&gt;This note describes usage of Paraview 4.3 (contrary to previous &lt;a href=&#34;https://bikulov.org/blog/2014/11/15/create-video-illustrations-from-numerical-experiments-data-with-paraview-and-python-2/&#34;&gt;note&lt;/a&gt; with Paraview before 4.1). Some changes were made:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;command line arguments were added to make code more reusable&lt;/li&gt;
&lt;li&gt;it works with Paraview extracted from the archive (4.3.1)&lt;/li&gt;
&lt;li&gt;white background must be specified manually (&lt;code&gt;SetViewProperties(view, Background = [1, 1, 1])&lt;/code&gt; in the code)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Install CUDA 6.5 on clean Ubuntu 14.04</title>
      <link>https://bikulov.org/blog/2015/02/28/install-cuda-6.5-on-clean-ubuntu-14.04/</link>
      <pubDate>Sat, 28 Feb 2015 08:54:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2015/02/28/install-cuda-6.5-on-clean-ubuntu-14.04/</guid>
      <description>&lt;p&gt;Lately NVIDIA added repository for Ubuntu 12.04 and Ubuntu 14.04. Recently I hit problem with missing dependencies for &lt;code&gt;libcheese-gtk23&lt;/code&gt; and &lt;code&gt;libcheese7&lt;/code&gt; libraries while installing latest CUDA 6.5 on clean Ubuntu 14.04. Remedy to this can be found on &lt;a href=&#34;http://askubuntu.com/questions/587977/unmet-dependences-when-install-cuda-6-5-on-a-freshly-installed-ubuntu-14-04&#34;&gt;askubuntu&lt;/a&gt;. So, the complete set of commands is below.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Create video illustrations from numerical experiments data with Paraview and Python 2</title>
      <link>https://bikulov.org/blog/2014/11/15/create-video-illustrations-from-numerical-experiments-data-with-paraview-and-python-2/</link>
      <pubDate>Sat, 15 Nov 2014 01:56:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2014/11/15/create-video-illustrations-from-numerical-experiments-data-with-paraview-and-python-2/</guid>
      <description>&lt;p&gt;See &lt;a href=&#34;http://bikulov.org/blog/2015/04/05/animations-from-scientific-data-using-paraview-4-dot-3-and-python/&#34;&gt;updated&lt;/a&gt; note.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tips for LXC: creation, autostart, OpenVPN and port forwarding to containers</title>
      <link>https://bikulov.org/blog/2014/10/09/tips-for-lxc-creation-autostart-openvpn-and-port-forwarding-to-containers/</link>
      <pubDate>Thu, 09 Oct 2014 10:02:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2014/10/09/tips-for-lxc-creation-autostart-openvpn-and-port-forwarding-to-containers/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve completed setting up my comfort set of LXC containers and want to save some points I spent a lot of time for or things for copy-paste.&lt;/p&gt;
&lt;p&gt;I used the official &lt;a href=&#34;https://help.ubuntu.com/lts/serverguide/lxc.html&#34;&gt;Ubuntu Server Guide&lt;/a&gt; but &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/getting-started-with-lxc-on-an-ubuntu-13-04-vps&#34;&gt;note&lt;/a&gt; at Digital Ocean knowledge base also helped me a lot. I created 3 containers: one for vpn, one for site on &lt;a href=&#34;https://bikulov.org/blog/2014/08/09/setup-drupal-7-with-nginx-and-postgresql-on-ubuntu-14-dot-04/&#34;&gt;Drupal&lt;/a&gt; and last one as www proxy for second one with nginx only.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup Drupal 7 with nginx and PostgreSQL on Ubuntu 14.04</title>
      <link>https://bikulov.org/blog/2014/08/09/setup-drupal-7-with-nginx-and-postgresql-on-ubuntu-14.04/</link>
      <pubDate>Sat, 09 Aug 2014 17:34:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2014/08/09/setup-drupal-7-with-nginx-and-postgresql-on-ubuntu-14.04/</guid>
      <description>&lt;p&gt;This note is similar to previous &lt;a href=&#34;https://bikulov.org/blog/2013/04/28/ubuntu-server-12-04-drupal-7-nginx-mysql/&#34;&gt;drupal&lt;/a&gt; and &lt;a href=&#34;https://bikulov.org/blog/2013/08/19/setting-up-joomla-3-dot-1-5-with-postgresql-on-ubuntu-13-dot-04/&#34;&gt;joomla&lt;/a&gt; installations. Install requirements (webserver, php5, DB server, DB adapter for php) as root:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;apt-get install -y nginx php5-fpm nginx postgresql php5-pgsql php5-gd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Install up-to-date scientific environment in Ubuntu 14.04 with Python 3.4</title>
      <link>https://bikulov.org/blog/2014/05/14/install-up-to-date-scientific-environment-in-ubuntu-14.04-with-python-3.4/</link>
      <pubDate>Wed, 14 May 2014 16:16:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2014/05/14/install-up-to-date-scientific-environment-in-ubuntu-14.04-with-python-3.4/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I&amp;rsquo;ve created an &lt;a href=&#34;https://bikulov.org/blog/2015/11/07/install-jupyter-notebook-and-scientific-environment-in-ubuntu-14-dot-04-with-python-3/&#34;&gt;updated page&lt;/a&gt; with most recent instructions for &lt;a href=&#34;http://jupyter.org/&#34;&gt;Jupyter Notebook&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Research Papers Management With Zotero and Yandex.Disk</title>
      <link>https://bikulov.org/blog/2014/02/13/research-papers-management-with-zotero-and-yandex.disk/</link>
      <pubDate>Thu, 13 Feb 2014 10:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2014/02/13/research-papers-management-with-zotero-and-yandex.disk/</guid>
      <description>&lt;p&gt;Zotero is an open source plugin for Firefox for managing research papers collections. You can use online zotero storage (pretty small) or use third-party sync application. I use Yandex Disk for this purpose: 10 Gb it quite enough for a moderate research library. zotero can automatically fetch article metadata (author, year, etc) from the web (like Mendeley and similar software do).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SSH config for multiple hops in Linux</title>
      <link>https://bikulov.org/blog/2014/01/25/ssh-config-for-multiple-hops-in-linux/</link>
      <pubDate>Sat, 25 Jan 2014 16:32:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2014/01/25/ssh-config-for-multiple-hops-in-linux/</guid>
      <description>&lt;p&gt;Often some hosts in corporate network are available only from several gateway machines. The scheme looks like that: you connect to gateway &lt;code&gt;ssh -A gateway.public.net&lt;/code&gt; and then to desired host from gateway machines &lt;code&gt;ssh -A host.private.net&lt;/code&gt;. But the problem arises when you want to copy or download something from &lt;em&gt;host.private.net&lt;/em&gt;. You have to do it in two hops, because &lt;code&gt;host.private.net&lt;/code&gt; is not available from your machine directly. The solution is ssh forwarding.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Example of CMake file for CUDA&#43;CPP code</title>
      <link>https://bikulov.org/blog/2013/12/24/example-of-cmake-file-for-cuda-cpp-code/</link>
      <pubDate>Tue, 24 Dec 2013 22:44:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/12/24/example-of-cmake-file-for-cuda-cpp-code/</guid>
      <description>&lt;p&gt;Makefiles are quite straightforward and easy to write (in reasonable situations). But GNU Make is not crossplafrom. CMake is cross-platform, cross-application (it can generate projects for different IDEs and Makefile itself).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>throw() in function signature in C&#43;&#43;</title>
      <link>https://bikulov.org/blog/2013/11/23/throw-in-function-signature-in-c-/</link>
      <pubDate>Sat, 23 Nov 2013 17:42:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/11/23/throw-in-function-signature-in-c-/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.cplusplus.com/doc/tutorial/exceptions/&#34;&gt;There is&lt;/a&gt; base class &lt;code&gt;exception&lt;/code&gt; in standard library (header &lt;code&gt;&amp;lt;exception&amp;gt;&lt;/code&gt;). It &lt;a href=&#34;http://en.cppreference.com/w/cpp/error/exception&#34;&gt;has&lt;/a&gt; default constructor, copy constructor, copy operator and destructor and virtual &lt;code&gt;what()&lt;/code&gt; function. Latter returns string with additional information about exception.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sort strings from file in C&#43;&#43;</title>
      <link>https://bikulov.org/blog/2013/11/19/sort-strings-from-file-in-c-/</link>
      <pubDate>Tue, 19 Nov 2013 23:53:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/11/19/sort-strings-from-file-in-c-/</guid>
      <description>&lt;p&gt;The very simple and common test program is to read bunch of strings from input file (let it be &lt;code&gt;input.txt&lt;/code&gt;), sort them and write down to another file (&lt;code&gt;output.txt&lt;/code&gt;). There is an &lt;a href=&#34;http://www.cyberforum.ru/post1673221.html&#34;&gt;implementation&lt;/a&gt; with small bug: it adds extra empty line. I&amp;rsquo;ve modified original code a bit, so now it works correctly (note: if have last empty line in the input, you will have an empty line in the output). Fixed code is provided below.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Randomized quicksort implementation in C&#43;&#43;</title>
      <link>https://bikulov.org/blog/2013/11/07/randomized-quicksort-implementation-in-c-/</link>
      <pubDate>Thu, 07 Nov 2013 18:27:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/11/07/randomized-quicksort-implementation-in-c-/</guid>
      <description>&lt;p&gt;Quicksort has $O(N\log(N))$ computational complexity in best and average cases, $O(N^{2})$ for bad case. Extremely bad cases may be avoided by using randomized Quicksort.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Heapsort implementation in C&#43;&#43;</title>
      <link>https://bikulov.org/blog/2013/11/04/heapsort-implementation-in-c-/</link>
      <pubDate>Mon, 04 Nov 2013 21:33:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/11/04/heapsort-implementation-in-c-/</guid>
      <description>&lt;p&gt;Heapsort is one of the fastest sorting algorithms. The best and the worst cases for heapsort have same $O(n\log(n))$ performance.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Set application version in gengetopt config based on Mercurial revision</title>
      <link>https://bikulov.org/blog/2013/11/02/set-application-version-in-gengetopt-config-based-on-mercurial-revision/</link>
      <pubDate>Sat, 02 Nov 2013 21:53:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/11/02/set-application-version-in-gengetopt-config-based-on-mercurial-revision/</guid>
      <description>&lt;p&gt;Previously I wrote about gengetopt tool to parse command line arguments. There was a line about application version.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;version &amp;quot;13.10.25&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It is important to keep this line up to date every time you compile and deploy binary.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Command line arguments in C and C&#43;&#43; with gengetopt</title>
      <link>https://bikulov.org/blog/2013/10/26/command-line-arguments-in-c-and-c-with-gengetopt/</link>
      <pubDate>Sat, 26 Oct 2013 00:03:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/10/26/command-line-arguments-in-c-and-c-with-gengetopt/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/software/gengetopt/gengetopt.html&#34;&gt;Gengetopt&lt;/a&gt; is a tool for parsing command line arguments in C and C++ applications. It generates &lt;code&gt;cmdline.c&lt;/code&gt; and &lt;code&gt;cmdline.h&lt;/code&gt; files in pure C, which contain parser, helper functions, error handling and structure to store argument values. Arguments to be included in auto-generated file are defined in config. I usually gengetopt config file as &lt;code&gt;cmdline.ggo&lt;/code&gt;. In this note I provide an example of gengetopt config file and arguments usage in code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hybrid symmetric-asymmetric encryption for large files</title>
      <link>https://bikulov.org/blog/2013/10/12/hybrid-symmetric-asymmetric-encryption-for-large-files/</link>
      <pubDate>Sat, 12 Oct 2013 15:33:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/10/12/hybrid-symmetric-asymmetric-encryption-for-large-files/</guid>
      <description>&lt;p&gt;Assymetric encryption is useful if you want to encrypt data at remote server via script. In case you use bash script for symmetric encryption job, you have to store password inside this script. So, if remote server is compromized, you will loose both the encrypted data and the key to decrypt it. Assymetric encryption allows you not to store decryption key at remote machine. So, data will be in safe even if server is hacked.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creation of paper-ready plots with matlotlib</title>
      <link>https://bikulov.org/blog/2013/10/03/creation-of-paper-ready-plots-with-matlotlib/</link>
      <pubDate>Thu, 03 Oct 2013 10:37:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/10/03/creation-of-paper-ready-plots-with-matlotlib/</guid>
      <description>&lt;p&gt;I used to utilize gnuplot for creation of plots with arbitrary data. The main problem was to postprocess data before plotting: I had to integrate postprocess into calculation code itself or to write additional script to do so. I&amp;rsquo;d like to provide an example of good-looking plotting with Python and matplotlib. Python has bataries included, so there will be no problem with preparation of data to be plotted.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using CUDA C&#43;&#43; functions in Python via `*.so` and ctypes</title>
      <link>https://bikulov.org/blog/2013/10/01/using-cuda-c-functions-in-python-via-.so-and-ctypes/</link>
      <pubDate>Tue, 01 Oct 2013 08:33:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/10/01/using-cuda-c-functions-in-python-via-.so-and-ctypes/</guid>
      <description>&lt;p&gt;I&amp;rsquo;d like to show how to use HPC part written on C++ with CUDA in Python code. So, every heavy part may be done on GPU with CUDA, all gluing tasks (with beautiful matplotlib plots) are done on CPU with Python.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Email notification if IP is changed with Python and cron</title>
      <link>https://bikulov.org/blog/2013/09/09/email-notification-if-ip-is-changed-with-python-and-cron/</link>
      <pubDate>Mon, 09 Sep 2013 23:24:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/09/09/email-notification-if-ip-is-changed-with-python-and-cron/</guid>
      <description>&lt;p&gt;This Python script retrieves computer&amp;rsquo;s external IP address (using internet.yandex.ru) and emails message with new IP if IP has been changed since last check. BeautifulSoup module is needed, so install it if you have no installed version:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo pip install beautifulsoup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Universal simple Makefile</title>
      <link>https://bikulov.org/blog/2013/09/02/universal-simple-makefile/</link>
      <pubDate>Mon, 02 Sep 2013 18:05:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/09/02/universal-simple-makefile/</guid>
      <description>&lt;p&gt;I often work on my netbook, so I prefer to use &lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt; with Makefiles instead of full-featured IDEs. To automate build process I&amp;rsquo;ve constructed (with help of &lt;a href=&#34;http://pipopolam.com/&#34;&gt;Vasily Picard&lt;/a&gt; and examples from the Internet) universal Makefile. It assumes the following structure of files.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Install and configure btsync in Ubuntu 12.04</title>
      <link>https://bikulov.org/blog/2013/08/26/install-and-configure-btsync-in-ubuntu-12.04/</link>
      <pubDate>Mon, 26 Aug 2013 18:42:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/08/26/install-and-configure-btsync-in-ubuntu-12.04/</guid>
      <description>&lt;p&gt;This note describes installation of Bittorrent Sync on Ubuntu. Tutorial was tested on Ubuntu 12.04, but it must work for all Debian-based systems. Read full btsync  &lt;a href=&#34;http://btsync.s3-website-us-east-1.amazonaws.com/BitTorrentSyncUserGuide.pdf&#34;&gt;manual&lt;/a&gt; for advanced information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setting up Joomla 3.1.5 with PostgreSQL on Ubuntu 13.04</title>
      <link>https://bikulov.org/blog/2013/08/19/setting-up-joomla-3.1.5-with-postgresql-on-ubuntu-13.04/</link>
      <pubDate>Mon, 19 Aug 2013 16:15:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/08/19/setting-up-joomla-3.1.5-with-postgresql-on-ubuntu-13.04/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CudaSafeCall application snippet</title>
      <link>https://bikulov.org/blog/2013/08/16/cudasafecall-application-snippet/</link>
      <pubDate>Fri, 16 Aug 2013 12:14:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/08/16/cudasafecall-application-snippet/</guid>
      <description>&lt;p&gt;It is a good tone to check CUDA API errors while calling cudaMalloc() and other functions. It also helps to find floating bugs caused by hardware (lack of memory, etc). I provide below an adapted version of CudaSafeCall I found many weeks ago in the &lt;a href=&#34;http://choorucode.com/2011/03/02/cuda-error-checking/&#34;&gt;Internet&lt;/a&gt;. Simply remove &lt;code&gt;#define CUDA_ERROR_CHECK&lt;/code&gt; in production if unneeded.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Enable tun for OpenVZ Ubuntu 12.04 containers in CentOS 6.4</title>
      <link>https://bikulov.org/blog/2013/08/10/enable-tun-for-openvz-ubuntu-12.04-containers-in-centos-6.4/</link>
      <pubDate>Sat, 10 Aug 2013 09:14:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/08/10/enable-tun-for-openvz-ubuntu-12.04-containers-in-centos-6.4/</guid>
      <description>&lt;p&gt;To enable tun device in OpenVZ containers tun module&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;needs to be loaded in the host system (in my case CentOS 6.4)&lt;/li&gt;
&lt;li&gt;containter (in my case Ubuntu Server 12.04) must be allowed to use tun&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Configuring Ubuntu 12.04 in OpenVZ on CentOS 6.4</title>
      <link>https://bikulov.org/blog/2013/08/08/configuring-ubuntu-12.04-in-openvz-on-centos-6.4/</link>
      <pubDate>Thu, 08 Aug 2013 20:54:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/08/08/configuring-ubuntu-12.04-in-openvz-on-centos-6.4/</guid>
      <description>&lt;p&gt;This howto is based on two sources: &lt;a href=&#34;http://openvz.org/Quick_Installation_CentOS_6&#34;&gt;Official wiki&lt;/a&gt; and Amutu blog &lt;a href=&#34;http://amutu.com/blog/2013/03/centos_bridge_devic/&#34;&gt;entry&lt;/a&gt;. In short, the main difficulty is in bridge network configuration: correct network configuration doesn&amp;rsquo;t work in CentOS 6.4 while NetworkManager is running. I compiled official documentation and fix found in Amutu blog here in one entry.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating Zip With VPN Client Keys and Configuration Files</title>
      <link>https://bikulov.org/blog/2013/07/31/creating-zip-with-vpn-client-keys-and-configuration-files/</link>
      <pubDate>Wed, 31 Jul 2013 09:31:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/07/31/creating-zip-with-vpn-client-keys-and-configuration-files/</guid>
      <description>&lt;p&gt;Depends on server configuration, each OpenVPN client needs configuration file (client.conf for *nix and client.ovpn for windows), certificate authority (ca.crt), [optional] tls auth file (ta.key), user crt and key.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configuration of hosts for convenient ssh connections</title>
      <link>https://bikulov.org/blog/2013/07/12/configuration-of-hosts-for-convenient-ssh-connections/</link>
      <pubDate>Fri, 12 Jul 2013 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/07/12/configuration-of-hosts-for-convenient-ssh-connections/</guid>
      <description>&lt;p&gt;It is possible to save configuration of ssh connection for later usage. For example, one had to type&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh &amp;lt;username&amp;gt;@&amp;lt;ip address&amp;gt; -p &amp;lt;port&amp;gt; -i &amp;lt;path to key file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;every time one wants to connect to server.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu Server 12.04 &#43; Slurm 2.5.7 fatnodes</title>
      <link>https://bikulov.org/blog/2013/06/18/ubuntu-server-12.04-slurm-2.5.7-fatnodes/</link>
      <pubDate>Tue, 18 Jun 2013 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/06/18/ubuntu-server-12.04-slurm-2.5.7-fatnodes/</guid>
      <description>&lt;p&gt;SLURM (Simple Linux Utility for Resource Management) — job scheduler and resource manager usually installed on supercomputers. For example, it runs on Lomonosov supercomputer in MSU, Moscow, Russia.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu Server 12.04 &#43; Drupal 7 &#43; nginx &#43; MySQL</title>
      <link>https://bikulov.org/blog/2013/04/28/ubuntu-server-12.04-drupal-7-nginx-mysql/</link>
      <pubDate>Sun, 28 Apr 2013 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/04/28/ubuntu-server-12.04-drupal-7-nginx-mysql/</guid>
      <description>&lt;p&gt;Default Drupal package in Ubuntu installs Apache, but I prefer nginx as a webserver. In this note I’ll describe steps necessary to get Drupal 7 work.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Universal screen capturing with scrot, imagemagick and ffmpeg</title>
      <link>https://bikulov.org/blog/2013/01/23/universal-screen-capturing-with-scrot-imagemagick-and-ffmpeg/</link>
      <pubDate>Wed, 23 Jan 2013 09:31:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2013/01/23/universal-screen-capturing-with-scrot-imagemagick-and-ffmpeg/</guid>
      <description>&lt;p&gt;You can record your screen using only command line in Linux. Workflow will look like: &lt;code&gt;Create a bunch of screenshots -&amp;gt; Crop screenshots -&amp;gt; Make a movie from images&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Get rid of Desktop window while launching Nautilus in i3</title>
      <link>https://bikulov.org/blog/2012/11/08/get-rid-of-desktop-window-while-launching-nautilus-in-i3/</link>
      <pubDate>Thu, 08 Nov 2012 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2012/11/08/get-rid-of-desktop-window-while-launching-nautilus-in-i3/</guid>
      <description>&lt;p&gt;In i3 window manager by default Nautilus actually opens two windows: Desktop window and Nautilus itself. The former can’t be closed by the default shortcut &lt;code&gt;$Mod+Shift+Q&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tools for tracing a pcap file in linux bash</title>
      <link>https://bikulov.org/blog/2012/11/03/tools-for-tracing-a-pcap-file-in-linux-bash/</link>
      <pubDate>Sat, 03 Nov 2012 09:31:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2012/11/03/tools-for-tracing-a-pcap-file-in-linux-bash/</guid>
      <description>&lt;p&gt;Pcap files are pocket capture files. They usually contain raw log of network connections and packets. It is the most popular format and it available in almost all network analysis tool.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Show N biggest directories in linux bash</title>
      <link>https://bikulov.org/blog/2012/11/01/show-n-biggest-directories-in-linux-bash/</link>
      <pubDate>Thu, 01 Nov 2012 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2012/11/01/show-n-biggest-directories-in-linux-bash/</guid>
      <description>&lt;p&gt;du (disk usage) utility in linux bash summarizes disk usage of each directory or file. By default, it outputs only directories. Just enter some dir and type&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ du ./
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Toggling string case in linux bash</title>
      <link>https://bikulov.org/blog/2012/10/31/toggling-string-case-in-linux-bash/</link>
      <pubDate>Wed, 31 Oct 2012 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2012/10/31/toggling-string-case-in-linux-bash/</guid>
      <description>&lt;p&gt;It’s quite an academic task, but anyway useful sometimes. I’ve collected different ways to do it in terminal in linux. Some of them work with UTF-8 characters (some it will toggle case for &amp;ldquo;й&amp;rdquo;, &amp;ldquo;ё&amp;rdquo; and so on. It will not in general handle special ligatures, such as &amp;ldquo;ß&amp;rdquo;&amp;quot; and &amp;ldquo;ﬁ&amp;rdquo;.)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setting up RhodeCode on Ubuntu 12.04</title>
      <link>https://bikulov.org/blog/2012/10/29/setting-up-rhodecode-on-ubuntu-12.04/</link>
      <pubDate>Mon, 29 Oct 2012 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2012/10/29/setting-up-rhodecode-on-ubuntu-12.04/</guid>
      <description>&lt;p&gt;This howto is based on a great guide with modifications. All settings are made for server domain hg.kenarius.org. You can replace it with your one easily.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWK: a powerful tool for programmer</title>
      <link>https://bikulov.org/blog/2012/10/25/awk-a-powerful-tool-for-programmer/</link>
      <pubDate>Thu, 25 Oct 2012 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2012/10/25/awk-a-powerful-tool-for-programmer/</guid>
      <description>&lt;p&gt;AWK is an acronym of first letters of its authors (Aho, Weinberger and Kernighan). It is a data-manipulating scripting language with huge possibilities.  There are several implementations of it: awk is a canonical one, nawk (new awk), mawk (default in Ubuntu 12.04), gawk is GNU awk. I recommend latter one, because it works correct with unicode symbols in example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span style=&#34;color:#007020&#34;&gt;echo&lt;/span&gt; юникод | gawk &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;{res = toupper(\$1); print res;}&amp;#34;&lt;/span&gt;
ЮНИКОД
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Daily backups (files &#43; mysql) to yandex.disk in Ubuntu 12.04</title>
      <link>https://bikulov.org/blog/2012/08/30/daily-backups-files-mysql-to-yandex.disk-in-ubuntu-12.04/</link>
      <pubDate>Thu, 30 Aug 2012 09:30:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2012/08/30/daily-backups-files-mysql-to-yandex.disk-in-ubuntu-12.04/</guid>
      <description>&lt;p&gt;We all do backups. This note is about doing them on Ubuntu 12.04.&lt;/p&gt;
&lt;p&gt;Tasks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;archive important folders&lt;/li&gt;
&lt;li&gt;dump mysql databases&lt;/li&gt;
&lt;li&gt;upload all to yandex.disk (online web storage with 10GB space)&lt;/li&gt;
&lt;li&gt;delete old backups&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’ll save only backups for last five days.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fixing missing icons in PCManFM</title>
      <link>https://bikulov.org/blog/2012/08/24/fixing-missing-icons-in-pcmanfm/</link>
      <pubDate>Fri, 24 Aug 2012 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2012/08/24/fixing-missing-icons-in-pcmanfm/</guid>
      <description>&lt;p&gt;After moving to i3 I’ve installed PCManFM as GUI file manager. To fix missing icons one have to define icon theme. These instructions are tested on Ubuntu 12.04, but it must work with other distros.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Montage png into single one</title>
      <link>https://bikulov.org/blog/2012/07/18/montage-png-into-single-one/</link>
      <pubDate>Wed, 18 Jul 2012 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2012/07/18/montage-png-into-single-one/</guid>
      <description>&lt;p&gt;Glue several png’s into one png &lt;code&gt;[1]+[2]+[3]+[4] = [[1][2][3][4]]&lt;/code&gt; with montage from ImageMagick:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;montage -geometry +1+1 -tile 4x1 image*.png final.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Blender and Python molecules visualization</title>
      <link>https://bikulov.org/blog/2012/04/11/blender-and-python-molecules-visualization/</link>
      <pubDate>Wed, 11 Apr 2012 09:00:00 +0300</pubDate>
      
      <guid>https://bikulov.org/blog/2012/04/11/blender-and-python-molecules-visualization/</guid>
      <description>&lt;p&gt;Blender is a free software for 3D graphics. In old virsions many operations were binded to hotkeys, so it was believed that Blender is very hard to master. Now it has more userfriendly interface with button in addition to hotkeys.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
